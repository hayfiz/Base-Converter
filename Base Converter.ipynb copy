{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def convert(input, source, target):\n",
    "    if (source == \"0123456789\") & (target == \"01\"): #converting decimal to binary \n",
    "        return bin(int(input))[2:]\n",
    "    if (source == \"01\") & (target == \"0123456789\"): #converting binary to decimal\n",
    "        return int(input, 2)\n",
    "    if (source == \"0123456789\") & (target == \"0123456789ABCDEF\"): #converting decimal to hexadecimal\n",
    "        return hex(int(input))[2:]\n",
    "    if (source == \"0123456789ABCDEF\") & (target == \"0123456789\"): #converting hexadecimal to decimal\n",
    "        return int(input, 16)\n",
    "    if (source == \"0123456789ABCDEF\") & (target == \"abcdefghijklmnopqrstuvwxyz\"): #converting hexadecimal to alphabet\n",
    "        return input.decode(\"hex\")\n",
    "    if (source == \"0123456789ABCDEF\") & (target == \"01\"): #converting hexadecimal to binary \n",
    "        return bin(input, 16)[2:]\n",
    "    if (source == \"01\") & (target == \"0123456789ABCDEF\"): #converting binary to hexadecimal\n",
    "        return hex(int(input, 2))[2:]\n",
    "    if (source == \"abcdefghijklmnopqrstuvwxyz\") & (target == \"0123456789ABCDEF\"): #converting alphabet to hexadecimal\n",
    "        hexValList = []\n",
    "        for i in input:\n",
    "            hexVal = hex(ord(i))[2:]\n",
    "            if len(hexVal) ==1:\n",
    "                hexVal = '0'+hexVal\n",
    "            hexValList.append(hexVal)\n",
    "        return reduce(lambda x,y:x+y, hexValList)    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "svip\n",
      "3\n",
      "48d\n"
     ]
    }
   ],
   "source": [
    "#Sample conversions\n",
    "print convert(\"73766970\", \"0123456789ABCDEF\",\"abcdefghijklmnopqrstuvwxyz\")\n",
    "print convert(\"11\", \"01\",\"0123456789\")\n",
    "print convert(\"0000010010001101\", \"01\",\"0123456789ABCDEF\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "IPython (Python 2)",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.8"
  },
  "signature": "sha256:73fc399f42b450cf364e7af3ae5809ce125955bda3bf6d730a97cfaf801badc2"
 },
 "nbformat": 4,
 "nbformat_minor": 0
}